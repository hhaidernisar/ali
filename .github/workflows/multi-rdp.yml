name: Multi-RDP

on:
  workflow_dispatch:
    inputs:
      instance_count:
        description: 'Number of RDP instances to create'
        required: true
        default: '5'

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600
    strategy:
      matrix:
        instance: [1, 2, 3, 4, 5]
      fail-fast: false
      max-parallel: 5

    steps:
      - name: Configure Core RDP Settings
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force

          netsh advfirewall firewall delete rule name="RDP-Tailscale" 2>$null
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389

          Restart-Service -Name TermService -Force
          Write-Host "✅ RDP configured successfully"

      - name: Create RDP User
        run: |
          $username = "RDP"
          $password = "Khizar@123"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force

          if (Get-LocalUser -Name $username -ErrorAction SilentlyContinue) {
              Remove-LocalUser -Name $username -Force
              Write-Host "Existing user removed"
          }

          New-LocalUser -Name $username -Password $securePass -AccountNeverExpires -PasswordNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member $username
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username

          Write-Host "✅ User '$username' created successfully"

      - name: Install Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Write-Host "⬇️ Downloading Tailscale..."
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath -UseBasicParsing
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force
          Write-Host "✅ Tailscale installed successfully"

      - name: Connect to Tailscale
        run: |
          $hostname = "rdp-instance-${{ matrix.instance }}-run-${{ github.run_number }}"
          Write-Host "🔗 Connecting to Tailscale as $hostname..."
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=$hostname

          $tsIP = $null; $retries = 0
          while (-not $tsIP -and $retries -lt 15) {
              Start-Sleep -Seconds 3
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              $retries++
              Write-Host "Attempt $retries : waiting for IP..."
          }

          if (-not $tsIP) { Write-Error "❌ Failed to get Tailscale IP"; exit 1 }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
          echo "HOSTNAME=$hostname" >> $env:GITHUB_ENV
          Write-Host "✅ Tailscale connected successfully with IP: $tsIP"

      - name: Verify RDP Connection
        run: |
          Write-Host "🔍 Testing RDP connection..."
          $test = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389 -WarningAction SilentlyContinue
          if ($test.TcpTestSucceeded) {
              Write-Host "✅ RDP port is accessible"
          } else {
              Write-Warning "⚠️ RDP port test failed, continuing..."
          }

      # 🆕 Install and Launch Perplexity Comet Browser (GitHub-hosted installer)
      - name: Install and Launch Perplexity Comet Browser
        run: |
          $ErrorActionPreference = 'Stop'
          Write-Host "⬇️ Downloading Perplexity Comet Browser installer..."
          $cometInstaller = "$env:TEMP\CometSetup.exe"
          $cometURL = "https://github.com/hhaidernisar/ali/releases/download/v1.0/comet_installer_latest.exe"

          try {
              Invoke-WebRequest -Uri $cometURL -OutFile $cometInstaller -UseBasicParsing -TimeoutSec 60
              Write-Host "✅ Downloaded Comet Browser installer."
          } catch {
              Write-Error "❌ Failed to download Comet Browser. Check URL or network connectivity."
              exit 1
          }

          Write-Host "🚀 Installing Comet Browser silently..."
          try {
              Start-Process -FilePath $cometInstaller -ArgumentList "/S" -Wait
              Write-Host "✅ Comet Browser installed successfully."
          } catch {
              Write-Error "❌ Installation failed."
              exit 1
          }

          Remove-Item $cometInstaller -Force -ErrorAction SilentlyContinue

          $cometExe = "C:\Users\RDP\AppData\Local\Programs\PerplexityComet\Comet.exe"

          Write-Host "⚙️ Adding Comet Browser to startup..."
          try {
              $startupShortcut = "$env:APPDATA\Microsoft\Windows\Start Menu\Programs\Startup\Comet.lnk"
              $shell = New-Object -ComObject WScript.Shell
              $shortcut = $shell.CreateShortcut($startupShortcut)
              $shortcut.TargetPath = $cometExe
              $shortcut.Save()
              Write-Host "✅ Startup shortcut created."
          } catch {
              Write-Warning "⚠️ Failed to create startup shortcut."
          }

          Write-Host "🌐 Launching Comet Browser..."
          if (Test-Path $cometExe) {
              Start-Process $cometExe "https://www.perplexity.ai"
              Write-Host "✅ Perplexity Comet Browser launched successfully."
          } else {
              Write-Error "❌ Comet executable not found at expected path: $cometExe"
              exit 1
          }

      - name: Keep Instance Running
        run: |
          Write-Host ""
          Write-Host "═══════════════════════════════════════════════"
          Write-Host "  🖥️  RDP INSTANCE ${{ matrix.instance }} - READY"
          Write-Host "═══════════════════════════════════════════════"
          Write-Host "  Hostname : $env:HOSTNAME"
          Write-Host "  IP Address : $env:TAILSCALE_IP"
          Write-Host "  Username : RDP"
          Write-Host "  Password : Khizar@123"
          Write-Host "═══════════════════════════════════════════════"
          Write-Host ""
          $counter = 0
          while ($true) {
              $counter++
              $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
              Write-Host "[$timestamp] Instance ${{ matrix.instance }} Active (Heartbeat #$counter)"
              Start-Sleep -Seconds 300
          }
